// Code generated by go-swagger; DO NOT EDIT.

package resource

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/TMaYaD/reservoir/models"
)

// AddResourceCreatedCode is the HTTP code returned for type AddResourceCreated
const AddResourceCreatedCode int = 201

/*AddResourceCreated successful operation

swagger:response addResourceCreated
*/
type AddResourceCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Resource `json:"body,omitempty"`
}

// NewAddResourceCreated creates AddResourceCreated with default headers values
func NewAddResourceCreated() *AddResourceCreated {
	return &AddResourceCreated{}
}

// WithPayload adds the payload to the add resource created response
func (o *AddResourceCreated) WithPayload(payload *models.Resource) *AddResourceCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add resource created response
func (o *AddResourceCreated) SetPayload(payload *models.Resource) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddResourceCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddResourceMethodNotAllowedCode is the HTTP code returned for type AddResourceMethodNotAllowed
const AddResourceMethodNotAllowedCode int = 405

/*AddResourceMethodNotAllowed Invalid input

swagger:response addResourceMethodNotAllowed
*/
type AddResourceMethodNotAllowed struct {
}

// NewAddResourceMethodNotAllowed creates AddResourceMethodNotAllowed with default headers values
func NewAddResourceMethodNotAllowed() *AddResourceMethodNotAllowed {
	return &AddResourceMethodNotAllowed{}
}

// WriteResponse to the client
func (o *AddResourceMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(405)
}
