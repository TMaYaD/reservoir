// Code generated by go-swagger; DO NOT EDIT.

package resource

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/TMaYaD/reservoir/models"
)

// SetResourceCreatedCode is the HTTP code returned for type SetResourceCreated
const SetResourceCreatedCode int = 201

/*SetResourceCreated successful operation

swagger:response setResourceCreated
*/
type SetResourceCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Resource `json:"body,omitempty"`
}

// NewSetResourceCreated creates SetResourceCreated with default headers values
func NewSetResourceCreated() *SetResourceCreated {
	return &SetResourceCreated{}
}

// WithPayload adds the payload to the set resource created response
func (o *SetResourceCreated) WithPayload(payload *models.Resource) *SetResourceCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set resource created response
func (o *SetResourceCreated) SetPayload(payload *models.Resource) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetResourceCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SetResourceMethodNotAllowedCode is the HTTP code returned for type SetResourceMethodNotAllowed
const SetResourceMethodNotAllowedCode int = 405

/*SetResourceMethodNotAllowed Validation exception

swagger:response setResourceMethodNotAllowed
*/
type SetResourceMethodNotAllowed struct {
}

// NewSetResourceMethodNotAllowed creates SetResourceMethodNotAllowed with default headers values
func NewSetResourceMethodNotAllowed() *SetResourceMethodNotAllowed {
	return &SetResourceMethodNotAllowed{}
}

// WriteResponse to the client
func (o *SetResourceMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(405)
}
